import type { Metadata } from 'next';
import { Geist, Geist_Mono } from 'next/font/google';
import React from 'react';
import './globals.css';

const geistSans = Geist({
	variable: '--font-geist-sans',
	subsets: ['latin'],
});

const geistMono = Geist_Mono({
	variable: '--font-geist-mono',
	subsets: ['latin'],
});

export const metadata: Metadata = {
	title: 'Create Next App',
	description: 'Generated by create next app',
};

// Add SegmentParams type definition
// Matches the definition from .next/types/app/layout.ts

type SegmentParams<T extends object = Record<string, unknown>> =
	T extends Record<string, unknown>
		? {
				[K in keyof T]: T[K] extends string
					? string | string[] | undefined
					: never;
			}
		: T;

export interface LayoutProps {
	children?: React.ReactNode;
	params?: Promise<SegmentParams>;
}

export default function RootLayout({
	children,
}: Readonly<{
	children: React.ReactNode;
}>): React.ReactElement {
	return (
		<html lang='en'>
			<body className={`${geistSans.variable} ${geistMono.variable}`}>
				{children}
			</body>
		</html>
	);
}
