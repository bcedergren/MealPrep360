name: CI - Build and Test

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [develop]

env:
  NODE_VERSION: '18'

jobs:
  # Lint and test each service
  frontend-test:
    name: Frontend - Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./MealPrep360
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: MealPrep360/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint || true

      - name: Run tests
        run: npm test || true

  admin-test:
    name: Admin Panel - Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./MealPrep360-Admin
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: MealPrep360-Admin/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint || true

      - name: Run tests
        run: npm test || true

  api-gateway-test:
    name: API Gateway - Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./MealPrep360-API
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: MealPrep360-API/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint || true

      - name: Run tests
        run: npm test || true

  recipe-service-test:
    name: Recipe Service - Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./MealPrep360-RecipeService
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: MealPrep360-RecipeService/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run format || true

      - name: Run tests
        run: npm test || true

  # Docker build validation
  docker-build:
    name: Docker - Build Validation
    runs-on: ubuntu-latest
    needs: [frontend-test, admin-test, api-gateway-test, recipe-service-test]
    strategy:
      matrix:
        service:
          - name: frontend
            context: ./MealPrep360
          - name: admin
            context: ./MealPrep360-Admin
          - name: api-gateway
            context: ./MealPrep360-API
          - name: recipe-service
            context: ./MealPrep360-RecipeService
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.service.context }}
          file: ${{ matrix.service.context }}/Dockerfile
          push: false
          tags: mealprep360/${{ matrix.service.name }}:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # Security scanning
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: [docker-build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
